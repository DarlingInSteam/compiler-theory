//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MapParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MapParserParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMapParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.map"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMap([NotNull] MapParserParser.MapContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.map"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMap([NotNull] MapParserParser.MapContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.fb1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFb1([NotNull] MapParserParser.Fb1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.fb1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFb1([NotNull] MapParserParser.Fb1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.datatype1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatatype1([NotNull] MapParserParser.Datatype1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.datatype1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatatype1([NotNull] MapParserParser.Datatype1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.comma1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComma1([NotNull] MapParserParser.Comma1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.comma1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComma1([NotNull] MapParserParser.Comma1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.datatype2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatatype2([NotNull] MapParserParser.Datatype2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.datatype2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatatype2([NotNull] MapParserParser.Datatype2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.lb1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLb1([NotNull] MapParserParser.Lb1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.lb1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLb1([NotNull] MapParserParser.Lb1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] MapParserParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] MapParserParser.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.ravno"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRavno([NotNull] MapParserParser.RavnoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.ravno"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRavno([NotNull] MapParserParser.RavnoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.new"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNew([NotNull] MapParserParser.NewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.new"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNew([NotNull] MapParserParser.NewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.hashmap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHashmap([NotNull] MapParserParser.HashmapContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.hashmap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHashmap([NotNull] MapParserParser.HashmapContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.fb2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFb2([NotNull] MapParserParser.Fb2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.fb2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFb2([NotNull] MapParserParser.Fb2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.datatype3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatatype3([NotNull] MapParserParser.Datatype3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.datatype3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatatype3([NotNull] MapParserParser.Datatype3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.comma2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComma2([NotNull] MapParserParser.Comma2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.comma2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComma2([NotNull] MapParserParser.Comma2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.datatype4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatatype4([NotNull] MapParserParser.Datatype4Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.datatype4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatatype4([NotNull] MapParserParser.Datatype4Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.lb2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLb2([NotNull] MapParserParser.Lb2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.lb2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLb2([NotNull] MapParserParser.Lb2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.lp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLp([NotNull] MapParserParser.LpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.lp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLp([NotNull] MapParserParser.LpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRp([NotNull] MapParserParser.RpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRp([NotNull] MapParserParser.RpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.semicolon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSemicolon([NotNull] MapParserParser.SemicolonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.semicolon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSemicolon([NotNull] MapParserParser.SemicolonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MapParserParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] MapParserParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MapParserParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] MapParserParser.DataTypeContext context);
}
